Just a notepad to reverseengineer the checksum generation (two bytes, while first is 0x0B | (second << 7) & 0x80, but the second byte needs some more investigation.)
There is scrambled and descrambled code in this document, scrambled starts with 04 or 02, descrambled with 0B or 8B.
Other messages have a base of 09 instead of 0B.



5b 0101 1011 = 1b 0001 1011
5d 0101 1101 = 1a 0001 1010



messages are recorded from move axis x:

02 0000 0010 = 1B  0001 1011 8B 1000 1011
03 0000 0011 = 1A  0001 1010 0B 0000 1011
04 0000 0100 = 1D  0001 1101 8B 1000 1011
05 0000 0101 = 1C  0001 1100 0B 0000 1011
06 0000 0110 = 1F  0001 1111 8B 1000 1011
07 0000 0111 = 1E  0001 1110 0B 0000 1011
08 0000 1000 = 11  0001 0001 8B 1000 1011
09 0000 1001 = 10  0001 0000 0B 0000 1011

0A 0000 1010 = 03  0000 0011 8B 1000 1011
0B 0000 1011 = 02  0000 0010 0B 0000 1011
0C 0000 1100 = 05  0000 0101 8B 1000 1011
0D 0000 1101 = 04  0000 0100 0B 0000 1011
0E 0000 1110 = 07  0000 0111 8B 1000 1011
0F 0000 1111 = 06  0000 0110 0B 0000 1011

10 0001 0000 = 19  0001 1001 8B 1000 1011
11 0001 0001 = 18  0001 1000 0B 0000 1011

12 0001 0010 = 2B  0010 1011 8B 1000 1011
13 0001 0011 = 2A  0010 1010 0B 0000 1011
14 0001 0100 = 2D  0010 1101 8B 1000 1011


00 0000 0000 = 1B  0001 1011 8B 1000 1011
01 0000 0001 = 1A  0001 1010 0B 0000 1011
02 0000 0010 = 1D  0001 1101 8B 1000 1011
03 0000 0011 = 1C  0001 1100 0B 0000 1011
04 0000 0100 = 1F  0001 1111 8B 1000 1011
05 0000 0101 = 1E  0001 1110 0B 0000 1011
06 0000 0110 = 11  0001 0001 8B 1000 1011
07 0000 0111 = 10  0001 0000 0B 0000 1011
08 0000 1000 = 03  0000 0011 8B 1000 1011
09 0000 1001 = 02  0000 0010 0B 0000 1011
0A 0000 1010 = 05  0000 0101 8B 1000 1011
0B 0000 1011 = 04  0000 0100 0B 0000 1011
0C 0000 1100 = 07  0000 0111 8B 1000 1011
0D 0000 1101 = 06  0000 0110 0B 0000 1011
0E 0000 1110 = 19  0001 1001 8B 1000 1011
0F 0000 1111 = 18  0001 1000 0B 0000 1011
10 0001 0000 = 2B  0010 1011 8B 1000 1011
11 0001 0001 = 2A  0010 1010 0B 0000 1011
12 0001 0010 = 2D  0010 1101 8B 1000 1011
...
18 0001 1000 = 13  0001 0011
20 0010 0000 = 3B  0011 1011
30 0011 0000 = 4B  0100 1011
40 0100 0000 = 5B  0101 1011
50 0101 0000 = 6B  0110 1011
60 0110 0000 = 7B  0111 1011
70 0111 0000 = 0A  0000 1010

89 2c da 00 00 36

DA 1101 1010
36 0011 0110
2C 0010 1100

EXAMPLE:

      CMD     PAYLOAD
      vvvvvvv vvvvvvvvv
8b 1a d900020 001010100
^^ ^^
|| Checksum
 \_ 0x80 toggles with checksum 0x01

  D9 1101 1001
+ 02 0000 0010
--------------
  1B 0001 1011
+ 01 0000 0001
--------------
  1A 0001 1010
  
  1B 0001 1011
+ 01 0000 0001
+ 01 0000 0001
+ 01 0000 0001
--------------
  1A 0001 1010

  1B 0001 1011
+ 02 0000 0010
          01X0
--------------
  1D 0001 1101

  1B 0001 1011
+ 03 0000 0011
          01X0
--------------
  1C 0001 1100

  1B 0001 1011
+ 04 0000 0100
          00X0
--------------
  1F 0001 1111

  1B 0001 1011
+ 05 0000 0101
          00X0
--------------
  1E 0001 1110

  1B 0001 1011
+ 06 0000 0110
          11X0
--------------
  11 0001 0001

  1B 0001 1011
+ 07 0000 0101
          00X0
--------------
  10 0001 0000

  1B 0001 1011
+ 08 0000 1000
          0000
--------------
  03 0000 0011

  1B 0001 1011
+ 09 0000 1001
          0110
--------------
  02 0000 0010

  1B 0001 1011
+ 0A 0000 1010
          0100
--------------
  05 0000 0101

  1B 0001 1011
+ 0B 0000 1011
          0110
--------------
  04 0000 0100

  1B 0001 1011
+ 0C 0000 1100
          0000
--------------
  05 0000 0101

  1B 0001 1011
+ 0D 0000 1101
          1110
--------------
  06 0000 0110

  1B 0001 1011
+ 0E 0000 1110
          1100
--------------
  19 0001 1001
  
  1B 0001 1011
+ 02 0000 0010
+ 02 0000 0010
+ 02 0000 0010
--------------
  19 0001 1001

  1B 0001 1011
+ 0F 0000 1111
          1110
--------------
  18 0001 1000


  1B 0001 1011
+ 10 0001 0000
     0010
--------------
  2B 0010 1011

  1B 0001 1011
+ 20 0010 0000
     0000
--------------
  3B 0011 1011

  1B 0001 1011
+ 30 0011 0000
     0010
--------------
  4B 0100 1011

  1B 0001 1011
+ 40 0100 0000
     0000
--------------
  5B 0101 1011

  1B 0001 1011
+ 50 0001 0000
     0010
--------------
  6B 0010 1011

  1B 0001 1011
+ 60 0110 0000
     0000
--------------
  7B 0111 1011

  1B 0001 1011
+ 70 0111 0000
     1110    1  -- OVERFLOW
--------------
  0A 0000 1010




  7F 0111 1111
+ 7F 0111 1111
--------------
  6D 0110 1101

  01 0000 0001    03 0000 0011
+ 01 0000 0001  + 01 0000 0001
--------------  --------------
  00 0000 0000    02 0000 0010

  01 0000 0001
+ 02 0000 0010
--------------
  00 0000 0011

  02 0000 0010
+ 02 0000 0010
--------------
  00 0000 0100

  02 0000 0010
+ 03 0000 0011
--------------
  05 0000 0101

  03 0000 0011
+ 03 0000 0011
--------------
  04 0000 0100

  04 0000 0100
+ 04 0000 0100
--------------
  18 0001 0100

  04 0000 0100
+ 0C 0000 1100
--------------
  00 0000 0000

  06 0000 0110
+ 06 0000 0110
--------------
  1C 0001 1100

  07 0000 0111
+ 06 0000 0110
--------------
  1D 0001 1101

  07 0000 0111
+ 07 0000 0111
--------------
  1C 0001 1100

  08 0000 1000
+ 08 0000 1000
--------------
  00 0000 0000

  10 0001 0000
+ 10 0001 0000
--------------
  00 0010 0000

  20 0010 0000
+ 20 0010 0000
--------------
  00 0100 0000

  40 0100 0000
+ 40 0100 0000
--------------
  00 0000 0001
  
  40 0100 0000
+ 41 0100 0001
--------------
  00 0000 0000



| (((a + b) >> 7) ^ (a & 1) ^ (b & 1)

0b1bd900020000010100

5B = 0101 1011

                    03f3 52898b 8989890fe3
                    03f5 52898b 8989890fe5
                    03f7 52898b 8989890fe7
                    0409 52898b 8989890ff9
                    040b 52898b 8989890ffb
                    040d 52898b 8989890ffd
                    040f 52898b 8989890fff
                    0401 52898b 8989890ff1
                    0403 52898b 8989890ff3
                    0405 52898b 8989890ff5
                    0407 52898b 8989890ff7
                    040b 52898b 8989898189
                    040d 52898b 898989818b
                    040f 52898b 898989818d
                    0411 52898b 898989818f
                                            0b 66 d90002 0000006d00
                                            0b 66 d90002 0000007f7f
                                            0b 0e d90002 0000007f07
                                            8b 09 d90002 000000017e
                                            8b 09 d90002 0000007f00
                                            8b 5b d90002 0000004000
                                            8b 4b d90002 0000003000
                                            8b 3b d90002 0000002000
                                            8b 2b d90002 0000001000
                                            8b 05 d90002 000000000a
                                            0b 02 d90002 0000000900
                                            0b 04 d90002 0000000b00
                                            8b 03 d90002 0000000800
                                            8b 11 d90002 0000000600
                                            0b 10 d90002 0000000700
                                            8b 1f d90002 0000000202
                                            8b 1f d90002 0000000400
                                            0b 1e d90002 0000000500
                                            8b 1d d90002 0000000200
                                            0b 1c d90002 0000030000
                                            0b 1c d90002 0000000102
                                            0b 1c d90002 0000000300

def addOverflow(a, b):
	return ((a + b) & 127) | ((a + b) >> 7)

8b 00 d900020000007600
8b 40 d900020000004076  = 37 = 76 ? 40
8b 01 d900020000000176
8b 01 d900020000007700
8b 13 d900020000001800
8b 2d d900020000001200
0b 2a d900020000001100
0b 18 d90002 0000000f00
8b 07 d90002 0000000c00
8b 19 d90002 0000000e00
0b 06 d90002 0000000d00
                                            0b 04 d90002 0000000b00
                                            8b 1d d90002 0200000000
                                            8b 1d d90002 0002000000
                                            8b 1d d90002 0000020000
                                            8b 1d d90002 0000000200
                                            8b 1d d90002 0000000002
                                            0b 1a d90002 0000010000
                                            0b 1a d90002 0000000100
                    0415 52898b 898989898b  8b 1d d90002 0000000002
                    0413 52898b 8989898989  8b 1b d90002 0000000000
                    0393 52098b 8989898989  0b 1a d90102 0000000000
                    0415 528b8b 8989898989  8b 1d d90202 0000000000
                    0395 520b8b 8989898989  0b 1c d90302 0000000000
                 X  03f1 52898b 8989890fe1  0b 78 d90002 0000000768
                 Y  0371 52098b 8989890fe1  0b 79 d90102 0000000768
                 Z  03f3 528b8b 8989890fe1  0b 7a d90202 0000000768
                 A  0373 520b8b 8989890fe1  0b 7b d90302 0000000768
